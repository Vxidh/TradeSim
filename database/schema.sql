CREATE TABLE IF NOT EXISTS users (
    user_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(255) UNIQUE NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    hashed_password TEXT NOT NULL,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS simulations (
    sim_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER REFERENCES users(user_id) ON DELETE CASCADE,
    sim_name VARCHAR(255) NOT NULL,
    initial_capital DECIMAL(19, 4) NOT NULL,
    start_timestamp TIMESTAMPTZ NOT NULL,
    end_timestamp TIMESTAMPTZ NOT NULL,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS assets (
    asset_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ticker_symbol VARCHAR(50) UNIQUE NOT NULL,
    asset_type VARCHAR(50),
    description TEXT
);

CREATE TABLE IF NOT EXISTS orders (
    order_id BIGINT PRIMARY KEY,
    sim_id INTEGER REFERENCES simulations(sim_id) ON DELETE CASCADE,
    asset_id INTEGER REFERENCES assets(asset_id),
    order_type VARCHAR(20) NOT NULL CHECK (order_type IN ('Limit', 'Market', 'Stop', 'StopLimit')),
    side VARCHAR(4) NOT NULL CHECK (side IN ('Buy', 'Sell')),
    quantity INTEGER NOT NULL CHECK (quantity > 0),
    price DECIMAL(19, 4), 
    stop_price DECIMAL(19, 4), 
    time_in_force VARCHAR(20) CHECK (time_in_force IN ('GTC', 'IOC', 'FOK')),
    status VARCHAR(20) NOT NULL DEFAULT 'PENDING' CHECK (status IN ('PENDING', 'ACTIVE', 'FILLED', 'CANCELLED', 'PARTIALLY_FILLED')),
    created_at TIMESTAMPTZ NOT NULL
);

CREATE TABLE IF NOT EXISTS trades (
    trade_id BIGINT PRIMARY KEY, 
    sim_id INTEGER REFERENCES simulations(sim_id) ON DELETE CASCADE,
    asset_id INTEGER REFERENCES assets(asset_id),
    aggressing_order_id BIGINT REFERENCES orders(order_id),
    resting_order_id BIGINT REFERENCES orders(order_id),
    quantity INTEGER NOT NULL CHECK (quantity > 0),
    price DECIMAL(19, 4) NOT NULL,
    executed_at TIMESTAMPTZ NOT NULL
);

-- Market data table, designed for time-series performance
CREATE TABLE IF NOT EXISTS market_data (
    "timestamp" TIMESTAMPTZ NOT NULL,
    asset_id INTEGER REFERENCES assets(asset_id),
    open_price DECIMAL(19, 4),
    high_price DECIMAL(19, 4),
    low_price DECIMAL(19, 4),
    close_price DECIMAL(19, 4),
    volume BIGINT,
    PRIMARY KEY ("timestamp", asset_id)
);


